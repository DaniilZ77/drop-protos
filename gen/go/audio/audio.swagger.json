{
  "swagger": "2.0",
  "info": {
    "title": "Drop Beats Service",
    "version": "1.0"
  },
  "tags": [
    {
      "name": "BeatService"
    }
  ],
  "host": "localhost:8081",
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/health": {
      "get": {
        "operationId": "BeatService_Health",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/audioHealthResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "BeatService"
        ]
      }
    },
    "/v1/beat": {
      "post": {
        "operationId": "BeatService_UploadBeat",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/audioUploadBeatResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/audioUploadBeatRequest"
            }
          }
        ],
        "tags": [
          "BeatService"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/v1/beat/params": {
      "get": {
        "operationId": "BeatService_GetBeatParams",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/audioGetBeatParamsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "BeatService"
        ]
      }
    },
    "/v1/beats": {
      "get": {
        "operationId": "BeatService_GetBeats",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/audioGetBeatsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "beatId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "genre",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "mood",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "tag",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "note.name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "note.scale",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "beatmakerId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "beatName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "bpm",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "orderBy.order",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orderBy.field",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "isDownloaded",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "BeatService"
        ]
      }
    },
    "/v1/beats/{beatId}": {
      "delete": {
        "operationId": "BeatService_DeleteBeat",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/audioDeleteBeatResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "beatId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "BeatService"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "patch": {
        "operationId": "BeatService_UpdateBeat",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/audioUpdateBeatResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "beatId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BeatServiceUpdateBeatBody"
            }
          }
        ],
        "tags": [
          "BeatService"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/v1/beats/{beatId}/acquire": {
      "post": {
        "operationId": "BeatService_AcquireBeat",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/audioAcquireBeatResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "beatId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BeatServiceAcquireBeatBody"
            }
          }
        ],
        "tags": [
          "BeatService"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    }
  },
  "definitions": {
    "BeatServiceAcquireBeatBody": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        }
      }
    },
    "BeatServiceUpdateBeatBody": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "beatGenre": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "beatTag": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "beatMood": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "note": {
          "$ref": "#/definitions/audioUpdateBeatNote"
        },
        "bpm": {
          "type": "string",
          "format": "int64"
        },
        "updateImage": {
          "type": "boolean"
        },
        "updateFile": {
          "type": "boolean"
        },
        "updateArchive": {
          "type": "boolean"
        },
        "range": {
          "$ref": "#/definitions/audioRange"
        }
      }
    },
    "audioAcquireBeatResponse": {
      "type": "object",
      "properties": {
        "archiveDownloadUrl": {
          "type": "string"
        }
      }
    },
    "audioBeat": {
      "type": "object",
      "properties": {
        "beatId": {
          "type": "string"
        },
        "beatmaker": {
          "$ref": "#/definitions/audioBeatmaker"
        },
        "imageDownloadUrl": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "genre": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "tag": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "mood": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "note": {
          "$ref": "#/definitions/audioGetBeatsNote"
        },
        "bpm": {
          "type": "string",
          "format": "int64"
        },
        "range": {
          "$ref": "#/definitions/audioRange"
        },
        "isFileUploaded": {
          "type": "boolean"
        },
        "isImageUploaded": {
          "type": "boolean"
        },
        "isArchiveUploaded": {
          "type": "boolean"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "audioBeatmaker": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "pseudonym": {
          "type": "string"
        }
      }
    },
    "audioDeleteBeatResponse": {
      "type": "object"
    },
    "audioGenreParam": {
      "type": "object",
      "properties": {
        "genreId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "audioGetBeatParamsResponse": {
      "type": "object",
      "properties": {
        "genres": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/audioGenreParam"
          }
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/audioTagParam"
          }
        },
        "moods": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/audioMoodParam"
          }
        },
        "notes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/audioNoteParam"
          }
        }
      }
    },
    "audioGetBeatsNote": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "scale": {
          "type": "string"
        }
      }
    },
    "audioGetBeatsResponse": {
      "type": "object",
      "properties": {
        "pagination": {
          "$ref": "#/definitions/audioPagination"
        },
        "beats": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/audioBeat"
          }
        }
      }
    },
    "audioHealthResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "audioMoodParam": {
      "type": "object",
      "properties": {
        "moodId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "audioNoteParam": {
      "type": "object",
      "properties": {
        "noteId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "audioOrderBy": {
      "type": "object",
      "properties": {
        "order": {
          "type": "string"
        },
        "field": {
          "type": "string"
        }
      }
    },
    "audioPagination": {
      "type": "object",
      "properties": {
        "pages": {
          "type": "string",
          "format": "int64"
        },
        "curPage": {
          "type": "string",
          "format": "int64"
        },
        "records": {
          "type": "string",
          "format": "int64"
        },
        "recordsPerPage": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "audioRange": {
      "type": "object",
      "properties": {
        "start": {
          "type": "string",
          "format": "int64"
        },
        "end": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "audioTagParam": {
      "type": "object",
      "properties": {
        "tagId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "audioUpdateBeatNote": {
      "type": "object",
      "properties": {
        "noteId": {
          "type": "string"
        },
        "scale": {
          "type": "string"
        }
      }
    },
    "audioUpdateBeatResponse": {
      "type": "object",
      "properties": {
        "fileUploadUrl": {
          "type": "string"
        },
        "imageUploadUrl": {
          "type": "string"
        },
        "archiveUploadUrl": {
          "type": "string"
        }
      }
    },
    "audioUploadBeatNote": {
      "type": "object",
      "properties": {
        "noteId": {
          "type": "string"
        },
        "scale": {
          "type": "string"
        }
      }
    },
    "audioUploadBeatRequest": {
      "type": "object",
      "properties": {
        "beatId": {
          "type": "string"
        },
        "beatmakerId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "beatGenre": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "beatTag": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "beatMood": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "note": {
          "$ref": "#/definitions/audioUploadBeatNote"
        },
        "bpm": {
          "type": "string",
          "format": "int64"
        },
        "range": {
          "$ref": "#/definitions/audioRange"
        }
      }
    },
    "audioUploadBeatResponse": {
      "type": "object",
      "properties": {
        "fileUploadUrl": {
          "type": "string"
        },
        "imageUploadUrl": {
          "type": "string"
        },
        "archiveUploadUrl": {
          "type": "string"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "BearerAuth": {
      "type": "apiKey",
      "description": "Format: `bearer \u003ctoken\u003e`",
      "name": "Authorization",
      "in": "header"
    }
  }
}
