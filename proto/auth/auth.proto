syntax = "proto3";

package auth;

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/MAXXXIMUS-tropical-milkshake/beatflow-protos;authv1";
option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "My API"
    version: "0.1"
  }
  host: "localhost:8080"
  base_path: "/"
  consumes: "application/json"
  produces: "application/json"
  schemes: HTTP
};

service AuthService {
  rpc Login(LoginRequest) returns (LoginResponse) {
    option (google.api.http) = {
      post: "/v1/auth/login"
      body: "*"
    };
  }
  rpc Signup(SignupRequest) returns (SignupResponse) {
    option (google.api.http) = {
      post: "/v1/auth/signup"
      body: "*"
    };
  }
  rpc RefreshToken(RefreshTokenRequest) returns (RefreshTokenResponse) {
    option (google.api.http) = {
      post: "/v1/auth/token/refresh"
      body: "*"
    };
  }
  rpc ValidateToken(ValidateTokenRequest) returns (ValidateTokenResponse) {
    option (google.api.http) = {get: "/v1/auth/token/{token}/validate"};
  }
}

message LoginRequest {
  string email = 1;
  string password = 2;
}

message LoginResponse {
  string access_token = 1;
  string refresh_token = 2;
}

message SignupRequest {
  string username = 1;
  string email = 2;
  string password = 3;
}

message SignupResponse {
  int64 user_id = 1;
  string username = 2;
  string email = 3;
}

message RefreshTokenRequest {
  string refresh_token = 1;
}

message RefreshTokenResponse {
  string access_token = 1;
  string refresh_token = 2;
}

message ValidateTokenRequest {
  string token = 1;
}

message ValidateTokenResponse {
  bool is_valid = 1;
  int64 user_id = 2;
}
