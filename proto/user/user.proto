syntax = "proto3";

package user;

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "protovalidate/validate.proto";

option go_package = "github.com/MAXXXIMUS-tropical-milkshake/beatflow-protos;userv1";

service UserService {
  rpc Login(LoginRequest) returns (LoginResponse) {
    option (google.api.http) = {
      post: "/v1/auth/login"
      body: "*"
    };
  }
  rpc RefreshToken(RefreshTokenRequest) returns (RefreshTokenResponse) {
    option (google.api.http) = {
      post: "/v1/auth/token"
      body: "*"
    };
  }
  rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse) {
    option (google.api.http) = {
      patch: "/v1/user"
      body: "*"
    };
  }
  rpc GetUsers(GetUsersRequest) returns (GetUsersResponse) {
    option (google.api.http) = {get: "/v1/users"};
  }
  rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse) {
    option (google.api.http) = {delete: "/v1/user"};
  }
  rpc GetUser(GetUserRequest) returns (GetUserResponse) {}
}

message LoginRequest {
  optional string pseudonym = 1 [(buf.validate.field).string = {
    min_len: 1
    max_len: 30
  }];
}

message LoginResponse {
  string access_token = 1;
  string refresh_token = 2;
}

message RefreshTokenRequest {
  string refresh_token = 1;
}

message RefreshTokenResponse {
  string access_token = 1;
  string refresh_token = 2;
}

message UpdateUserRequest {
  optional string pseudonym = 1 [(buf.validate.field).string = {
    min_len: 1
    max_len: 30
  }];
  optional string first_name = 2 [(buf.validate.field).string = {
    min_len: 1
    max_len: 50
  }];
  optional string last_name = 3 [(buf.validate.field).string = {
    min_len: 1
    max_len: 50
  }];
}

message UpdateUserResponse {
  string user_id = 1;
  string username = 2;
  string pseudonym = 3;
  string first_name = 4;
  string last_name = 5;
  google.protobuf.Timestamp created_at = 9;
}

enum Order {
  ASC = 0;
  DESC = 1;
}

message OrderBy {
  Order order = 1;
  string field = 2 [(buf.validate.field).string = {
    min_len: 1
    max_len: 100
  }];
}

message GetUsersRequest {
  optional string user_id = 1 [(buf.validate.field).string.uuid = true];
  optional string username = 2 [(buf.validate.field).string = {
    min_len: 1
    max_len: 30
  }];
  optional string pseudonym = 3 [(buf.validate.field).string = {
    min_len: 1
    max_len: 30
  }];
  optional string first_name = 4 [(buf.validate.field).string = {
    min_len: 1
    max_len: 50
  }];
  optional string last_name = 5 [(buf.validate.field).string = {
    min_len: 1
    max_len: 50
  }];
  optional OrderBy order_by = 6;
  int64 limit = 7 [(buf.validate.field).int64 = {
    gt: 0
    lte: 100
  }];
  int64 offset = 8 [(buf.validate.field).int64.gte = 0];
}

message Pagination {
  int64 pages = 1;
  int64 cur_page = 2;
  int64 records = 3;
  int64 records_per_page = 4;
}

message User {
  string user_id = 1;
  string username = 2;
  string pseudonym = 3;
  string first_name = 4;
  string last_name = 5;
  google.protobuf.Timestamp created_at = 9;
}

message GetUsersResponse {
  Pagination pagination = 1;
  repeated User users = 2;
}

message DeleteUserRequest {}

message DeleteUserResponse {}

message GetUserRequest {
  string user_id = 1 [(buf.validate.field).string.uuid = true];
}

message GetUserResponse {
  string user_id = 1;
  string username = 2;
  string pseudonym = 3;
  string first_name = 4;
  string last_name = 5;
  google.protobuf.Timestamp created_at = 9;
}
