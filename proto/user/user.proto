syntax = "proto3";

package user;

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "protovalidate/validate.proto";

option go_package = "github.com/MAXXXIMUS-tropical-milkshake/beatflow-protos;userv1";
option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Drop Auth Service"
    version: "1.0"
  }
  schemes: HTTP
  host: "localhost:8080"
  consumes: "application/json"
  produces: "application/json"
  security_definitions: {
    security: {
      key: "BearerAuth"
      value: {
        type: TYPE_API_KEY
        description: "Format: `bearer <token>`"
        in: IN_HEADER
        name: "Authorization"
      }
    }
    security: {
      key: "TmaAuth"
      value: {
        type: TYPE_API_KEY
        description: "Format: `tma <token>`"
        in: IN_HEADER
        name: "Authorization"
      }
    }
  }
};

service UserService {
  rpc Login(LoginRequest) returns (LoginResponse) {
    option (google.api.http) = {
      post: "/v1/auth/login"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      security: {
        security_requirement: {
          key: "TmaAuth"
          value: {}
        }
      }
    };
  }
  rpc RefreshToken(RefreshTokenRequest) returns (RefreshTokenResponse) {
    option (google.api.http) = {
      post: "/v1/auth/token/refresh"
      body: "*"
    };
  }
  rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse) {
    option (google.api.http) = {
      patch: "/v1/user"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      security: {
        security_requirement: {
          key: "BearerAuth"
          value: {}
        }
      }
    };
  }
  rpc GetUsers(GetUsersRequest) returns (GetUsersResponse) {
    option (google.api.http) = {get: "/v1/users"};
  }
  rpc GetUser(GetUserRequest) returns (GetUserResponse) {}
  rpc InitAdmin(InitAdminRequest) returns (InitAdminResponse) {
    option (google.api.http) = {
      post: "/v1/admin/init"
      body: "*"
    };
  }
  rpc AddAdmin(AddAdminRequest) returns (AddAdminResponse) {
    option (google.api.http) = {
      post: "/v1/admin"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      security: {
        security_requirement: {
          key: "BearerAuth"
          value: {}
        }
      }
    };
  }
  rpc DeleteAdmin(DeleteAdminRequest) returns (DeleteAdminResponse) {
    option (google.api.http) = {delete: "/v1/admin/{user_id}"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      security: {
        security_requirement: {
          key: "BearerAuth"
          value: {}
        }
      }
    };
  }
  rpc Health(HealthRequest) returns (HealthResponse) {
    option (google.api.http) = {get: "/health"};
  }
}

message LoginRequest {
  optional string pseudonym = 1 [(buf.validate.field).string = {
    min_len: 1
    max_len: 30
  }];
}

message LoginResponse {
  string access_token = 1;
  string refresh_token = 2;
}

message RefreshTokenRequest {
  string refresh_token = 1;
}

message RefreshTokenResponse {
  string access_token = 1;
  string refresh_token = 2;
}

message UpdateUserRequest {
  optional string pseudonym = 1 [(buf.validate.field).string = {
    min_len: 1
    max_len: 30
  }];
  optional string first_name = 2 [(buf.validate.field).string = {
    min_len: 1
    max_len: 50
  }];
  optional string last_name = 3 [(buf.validate.field).string = {
    min_len: 1
    max_len: 50
  }];
}

message UpdateUserResponse {
  string user_id = 1;
  string username = 2;
  string pseudonym = 3;
  string first_name = 4;
  string last_name = 5;
  google.protobuf.Timestamp created_at = 9;
}

message OrderBy {
  string order = 1 [(buf.validate.field).cel = {
    id: "order_by_order_must_be_valid"
    message: "the order must be one of asc or desc"
    expression: "this in ['asc', 'desc']"
  }];
  string field = 2 [(buf.validate.field).cel = {
    id: "order_by_field_must_be_valid"
    message: "the field must be one of username, pseudonym, first_name, last_name or created_at"
    expression: "this in ['username', 'pseudonym', 'first_name', 'last_name', 'created_at']"
  }];
}

message GetUsersRequest {
  optional string user_id = 1 [(buf.validate.field).string.uuid = true];
  optional string username = 2 [(buf.validate.field).string = {
    min_len: 1
    max_len: 30
  }];
  optional string pseudonym = 3 [(buf.validate.field).string = {
    min_len: 1
    max_len: 30
  }];
  optional string first_name = 4 [(buf.validate.field).string = {
    min_len: 1
    max_len: 50
  }];
  optional string last_name = 5 [(buf.validate.field).string = {
    min_len: 1
    max_len: 50
  }];
  optional OrderBy order_by = 6;
  uint64 limit = 7 [(buf.validate.field).int64 = {
    gt: 0
    lte: 100
  }];
  uint64 offset = 8 [(buf.validate.field).int64.gte = 0];
}

message Pagination {
  int64 pages = 1;
  int64 cur_page = 2;
  int64 records = 3;
  int64 records_per_page = 4;
}

message User {
  string user_id = 1;
  string username = 2;
  string pseudonym = 3;
  string first_name = 4;
  string last_name = 5;
  google.protobuf.Timestamp created_at = 9;
}

message GetUsersResponse {
  Pagination pagination = 1;
  repeated User users = 2;
}

message GetUserRequest {
  string user_id = 1 [(buf.validate.field).string.uuid = true];
}

message GetUserResponse {
  string user_id = 1;
  string username = 2;
  string pseudonym = 3;
  string first_name = 4;
  string last_name = 5;
  google.protobuf.Timestamp created_at = 9;
}

message InitAdminRequest {
  string username = 1 [(buf.validate.field).string = {
    min_len: 1
    max_len: 30
  }];
}

message InitAdminResponse {}

message AddAdminRequest {
  string username = 1 [(buf.validate.field).string = {
    min_len: 1
    max_len: 30
  }];
}

message AddAdminResponse {}

message DeleteAdminRequest {
  string user_id = 1 [(buf.validate.field).string.uuid = true];
}

message DeleteAdminResponse {}

message HealthRequest {}
message HealthResponse {
  string message = 1;
}
